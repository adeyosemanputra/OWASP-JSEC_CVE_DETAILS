package com.dibsyhex.views;

import com.dibsyhex.controllers.ESXController;
import com.dibsyhex.views.ExploitSearchResponse;
import com.dibsyhex.views.JsonListener;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.LayoutManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.json.JsonArray;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class ExploitSearch
extends JPanel
implements ActionListener {
    public JTextField search;
    public JButton submit;
    public JLabel text;
    public JPanel searchArea = new JPanel();
    private JsonListener stringListener;
    public ExploitSearchResponse exploitSearchResponse;

    public ExploitSearch() {
        this.searchArea.setLayout(new FlowLayout());
        this.exploitSearchResponse = new ExploitSearchResponse();
        this.search = new JTextField(20);
        this.text = new JLabel("Enter platform or language or CVE");
        this.submit = new JButton("Search");
        this.submit.addActionListener(this);
        this.setLayout(new BorderLayout());
        this.searchArea.add(this.text);
        this.searchArea.add(this.search);
        this.searchArea.add(this.submit);
        this.add((Component)this.searchArea, "North");
        this.add((Component)this.exploitSearchResponse, "Center");
        this.setStringListener(new JsonListener(){

            @Override
            public void returnedText(JsonArray jsonArray) {
                ExploitSearch.this.exploitSearchResponse.printPreety(jsonArray);
            }
        });
    }

    public void setStringListener(JsonListener stringListener) {
        this.stringListener = stringListener;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String query = this.search.getText();
        ESXController esxController = new ESXController(query);
        esxController.process();
        JsonArray jsonArray = esxController.getJsonArray();
        if (this.stringListener != null) {
            this.stringListener.returnedText(jsonArray);
        }
    }

}

