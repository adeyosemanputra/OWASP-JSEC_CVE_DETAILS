package com.dibsyhex.views;

import com.dibsyhex.views.JsonListener;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.LayoutManager;
import java.util.List;
import javax.json.JsonArray;
import javax.json.JsonObject;
import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;

public class ExploitSearchResponse
extends JPanel {
    private JTextArea response = new JTextArea();
    private JsonArray jsonArray;
    private JsonListener stringListener;

    public ExploitSearchResponse() {
        this.setLayout(new BorderLayout());
        this.add(new JScrollPane(this.response));
        this.response.setEnabled(false);
        this.response.setDisabledTextColor(Color.BLACK);
        this.response.setBackground(new Color(255, 255, 204));
        TitledBorder innerBorder = BorderFactory.createTitledBorder("Result");
        Border outerBorder = BorderFactory.createEmptyBorder(15, 15, 15, 15);
        this.setBorder(BorderFactory.createCompoundBorder(innerBorder, outerBorder));
        this.setFont(new Font("Serif", 0, 4));
        this.setBackground(new Color(229, 255, 204));
    }

    public JTextArea getResponse() {
        return this.response;
    }

    public void setResponse(JTextArea response) {
        this.response = response;
    }

    public JsonArray getJsonArray() {
        return this.jsonArray;
    }

    public void setJsonArray(JsonArray jsonArray) {
        this.jsonArray = jsonArray;
    }

    public void printPreety(JsonArray jsonArray) {
        this.response.setText("");
        try {
        	 int size = jsonArray.size();
             int i=0;
        	 while(i<size) {
        		JsonObject result=jsonArray.getJsonObject(i); 
                try {
                    this.response.append("Name : " + result.getString("name"));
                    this.response.append("\n");
                }
                catch (Exception a) {
                    
                }
                try {
                    this.response.append("ID : " + result.getString("id"));
                    this.response.append("\n");
                }
                catch (Exception b) {
                    
                }
                JsonObject info = result.getJsonObject("info");
                try {
                    this.response.append("Source : " + info.getString("src"));
                    this.response.append("\n");
                }
                catch (Exception c) {
                    
                }
                try {
                    this.response.append("Description : " + info.getString("desc"));
                    this.response.append("\n");
                }
                catch (Exception d) {
                    
                }
                try {
                    this.response.append("CVSS : " + info.getString("cvss"));
                    this.response.append("\n");
                }
                catch (Exception f) {
                   
                }
                try {
                    JsonArray exploits = result.getJsonArray("exploits");
                    int x = exploits.size();
                    int j = 0;
                    while (j < x) {
                        this.response.append("Available Exlpoits : " + exploits.getString(j));
                        this.response.append("\n");
                        ++j;
                    }
                }
                catch (Exception f) {
                    // empty catch block
                }
                this.response.append("\n");
                i++;
            }
        }
        catch (Exception e) {
           
        }
    }
}

